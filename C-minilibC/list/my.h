#ifndef		__MY_H__
# define	__MY_H__

void			my_putchar(char c);
int			my_isneg(int n);
int			to_continuemyputnbr(int nb);
int			over_lmyputnbr(int nb);
int			my_put_nbr(int nb);
int			my_swap(int *a, int *b);
int			my_putstr(char *str);
int			my_strlen(char *str);
int			my_power(int nb, int p);
int			get_signe(char *str);
char			*get_nb_digits(char *str, int *occur);
char			*zappe_to_num_or_signe(char *str);
int			my_char_is_num_or_signe(char c);
int			my_getnbr(char *str);
void			my_sort_int_tab(int *tab, int size);
int			my_power_rec(int nb, int power);
int			find_square(int nb, int bi, int bf);
int			my_square_root(int nb);
int			find_rounded_square(int nb, int bi, int bf);
int			my_rounded_square_root(int nb);
int			eratosthene(int nb, int *primes);
int			my_is_prime(int nombre);
int			my_find_prime_sup(int nb);
char			*my_strcpy(char *dest, char *src);
char			*my_strncpy(char *dest, char *src, int n);
char			*my_revstr(char *str);
char			*my_strstr(char *str, char *to_find);
int			my_strcmp(char *s1, char *s2);
int			my_strncmp(char *s1, char *s2, int n);
char			*my_strupcase(char *str);
char			*my_strlowcase(char *str);
char			*my_strcapitalize(char *str);
int			my_char_isalpha(char s);
int			my_char_isnum(char s);
int			my_str_isalpha(char *str);
int			my_str_isnum(char *str);
int			my_str_islower(char *str);
int			my_str_isupper(char *str);
int			my_str_isprintable(char *str);
char			*get_first_alpha_char(char *s);
char			*get_first_nonalpha_char(char *s);
void			my_putnbr_basemodif(int nbr, char *base, int nbd);
char			*showline(char *line, char* orig);
int			my_showmem(char *str);
int			my_char_isprintable(char str);
int			my_showstr(char *str);
char			*my_strcat(char *str1, char *str2);
char			*my_strncat(char *str1, char *str2, int n);
int			my_strlcat(char *str1, char *str2, int l);
int			my_strchar(char *str, char to_find);
long long		determine_power(char* str, int base);
int			my_getnbr_base(char *str, char *base);
int			my_putnbr_base(int nbr, char *base);
int			nbr_base_tocharp_tonorme(long long *nb , int *j,char *r);
char			*nbr_base_tocharp(long long nb , char *base);
char			*my_strdup(char *str);
int			my_str_to_wordtab_count(char *str);
char			**my_str_to_wordtab(char *str);
int			my_show_to_wordtab(char **tab);

#endif			/*__MY_H__*/
